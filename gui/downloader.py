# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'downloader.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox, QWidget
from preview import preview_Ui

encode_pic = None
decrypt_key = None
embed_key = None
embed_text = str('')


class Ui_Form(object):
    def __init__(self):
        self.cwd = None
        self.child_window = None

    def setupUi(self, Form):
        self.cwd = os.getcwd()  # 获取当前程序文件位置
        Form.setObjectName("Form")
        Form.resize(400, 227)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        Form.setFont(font)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox_2 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_2.setMaximumSize(QtCore.QSize(362, 16777215))
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.pushButton_5 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout_3.addWidget(self.pushButton_5, 0, 1, 1, 1)
        self.pushButton_6 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_6.setObjectName("pushButton_6")
        self.gridLayout_3.addWidget(self.pushButton_6, 0, 2, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setObjectName("label_4")
        self.gridLayout_3.addWidget(self.label_4, 0, 0, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout_3.addWidget(self.pushButton_4, 1, 1, 1, 2)
        self.label_5 = QtWidgets.QLabel(self.groupBox_2)
        self.label_5.setObjectName("label_5")
        self.gridLayout_3.addWidget(self.label_5, 1, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox_2, 1, 0, 1, 2)
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_2.addWidget(self.pushButton_3, 4, 4, 1, 1)
        self.label = QtWidgets.QLabel(self.groupBox_3)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 2, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.groupBox_3)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 4, 0, 2, 1)
        self.pushButton = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 2, 4, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_2.addWidget(self.pushButton_2, 3, 4, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout_2.addWidget(self.lineEdit, 2, 2, 1, 2)
        self.label_2 = QtWidgets.QLabel(self.groupBox_3)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 3, 0, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout_2.addWidget(self.lineEdit_2, 3, 2, 1, 2)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout_2.addWidget(self.lineEdit_3, 4, 2, 2, 2)
        self.gridLayout.addWidget(self.groupBox_3, 0, 0, 1, 2)
        self.verticalLayout.addWidget(self.groupBox)

        self.retranslateUi(Form)
        self.pushButton.clicked.connect(self.path_load_decrypt_key)
        self.pushButton_2.clicked.connect(self.path_load_embed_key)
        self.pushButton_3.clicked.connect(self.path_load_pic)
        self.pushButton_5.clicked.connect(self.preview_embed_text)
        self.pushButton_6.clicked.connect(self.save_embed_text)
        self.pushButton_4.clicked.connect(self.save_decrypt_pic)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.pushButton_5.setText(_translate("Form", "预览"))
        self.pushButton_6.setText(_translate("Form", "保存"))
        self.label_4.setText(_translate("Form", "提取嵌入信息"))
        self.pushButton_4.setText(_translate("Form", "解密图片并保存"))
        self.label_5.setText(_translate("Form", "还原加密图片"))
        self.pushButton_3.setText(_translate("Form", "浏览"))  # 加载密文图片路径
        self.label.setText(_translate("Form", "加载解密密钥"))
        self.label_3.setText(_translate("Form", "加载密文图片"))
        self.pushButton.setText(_translate("Form", "浏览"))  # 加载解密密钥路径
        self.pushButton_2.setText(_translate("Form", "浏览"))  # 加载嵌入密钥路径
        self.label_2.setText(_translate("Form", "加载嵌入密钥"))

        self.lineEdit.setText("")  # 加载解密密钥路径
        self.lineEdit_2.setText("")  # 加载嵌入密钥路径
        self.lineEdit_3.setText("")  # 加密图片路径

    # 加载解密密钥路径
    def path_load_decrypt_key(self):
        file_name, filetype = \
            QFileDialog.getOpenFileName(None,
                                        "选取文件",
                                        self.cwd,  # 起始路径
                                        "Text Files (*.txt);;All Files (*)")
        if file_name == "":  # 空路径
            return
        else:
            # 将选中路径同步到LineEdit上
            self.lineEdit.setText(file_name)
            return

    # 加载嵌入密钥路径
    def path_load_embed_key(self):
        file_name, filetype = \
            QFileDialog.getOpenFileName(None,
                                        "选取文件",
                                        self.cwd,  # 起始路径
                                        "Text Files (*.txt);;All Files (*)")
        if file_name == "":  # 空路径
            return
        else:
            # 将选中路径同步到LineEdit上
            self.lineEdit_2.setText(file_name)
            return

    # 加载加密图片路径
    def path_load_pic(self):
        file_name, filetype = \
            QFileDialog.getOpenFileName(None,
                                        "选取文件",
                                        self.cwd,  # 起始路径
                                        "Text Files (*.jpg);;")
        if file_name == "":  # 空路径
            return
        else:
            # 将选中路径同步到LineEdit上
            self.lineEdit_3.setText(file_name)
            return

    # 弹窗预览嵌入信息文本
    def preview_embed_text(self):
        if embed_text != '':
            self.child_window = Child()
            pre_ui = preview_Ui()
            pre_ui.setupUi(self.child_window)
            self.child_window.show()
        else:
            QMessageBox.critical(None, "错误", "没有获得嵌入信息！", QMessageBox.Yes | QMessageBox.No)

        return

    # 保存嵌入文本为txt
    def save_embed_text(self):
        save_path = self.lineEdit.text()
        f = open(save_path, 'w')
        if embed_text != '':
            f.write(embed_text)
            self.label_3.setText("保存成功")
        else:
            self.label_3.setText("保存失败")
        f.close()
        return

    # 解密并保存图片
    def save_decrypt_pic(self):
        # TODO 解密产生原图片
        # 选择保存路径
        file_name, filetype = \
            QFileDialog.getSaveFileName(None,
                                        "文件保存",
                                        self.cwd,  # 起始路径
                                        "Text Files (*.jpg);;")
        if file_name == "":  # 空路径
            return
        else:
            # TODO 保存解密图片文件
            return


class Child(QWidget):
    def __init__(self):
        super().__init__()
        self.textBrowser.setText(embed_text)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Form()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
